{"ast":null,"code":"import axios from \"axios\";\nimport { ActionTypes } from \"../contants/action-types\";\nimport apiURL from \"../../apis/basURL\";\n\n// export const fetchProdcts = (data)=> \n//     async  (dispatch) => {\n//         const response =  await apiURL.post(`/login/${data}`);\n//         dispatch({type:ActionTypes.FETCH_PRODCTS , payload: response.data})\n//     }\n\nexport const fetchProducts = data => async dispatch => {\n  try {\n    const response = await apiURL.post(`/login`, data);\n    dispatch({\n      type: ActionTypes.FETCH_PRODCTS,\n      payload: response.data\n    });\n\n    // Assuming you have some way to get the token from the response\n    const token = response.data.token;\n\n    // Save the token in the store or wherever you are storing it\n    dispatch({\n      type: ActionTypes.SET_TOKEN,\n      payload: token\n    });\n\n    // Redirect to \"/\"\n    // Assuming you are using some library or component for navigation\n    // Replace it with the actual method to navigate to \"/\"\n    // (e.g., this.props.history.push(\"/\") in a class component or useHistory() in a functional component)\n    navigate(\"/\");\n  } catch (error) {\n    // Handle error here, you might want to dispatch an error action\n    console.error(\"Error fetching products:\", error);\n  }\n};\n\n// export const setProducts =(Products)=> {\n//     return {\n//         type:ActionTypes.SET_PRODUCTS,\n//         payload:Products\n//     };\n// };\n\n// export const selectedProducts =(Product)=> {\n//     return {\n//         type:ActionTypes.SELECTED_PRODUCT,\n//         payload:Product\n//     };\n// };","map":{"version":3,"names":["axios","ActionTypes","apiURL","fetchProducts","data","dispatch","response","post","type","FETCH_PRODCTS","payload","token","SET_TOKEN","navigate","error","console"],"sources":["C:/Users/CIPL1404/Downloads/Archive/src/rexdux/actions/productionActions.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { ActionTypes } from \"../contants/action-types\";\nimport apiURL from \"../../apis/basURL\";\n\n// export const fetchProdcts = (data)=> \n//     async  (dispatch) => {\n//         const response =  await apiURL.post(`/login/${data}`);\n//         dispatch({type:ActionTypes.FETCH_PRODCTS , payload: response.data})\n//     }\n    \n  \n    \n\n    export const fetchProducts = (data) => async (dispatch) => {\n        try {\n          const response = await apiURL.post(`/login`, data);\n          dispatch({ type: ActionTypes.FETCH_PRODCTS, payload: response.data });\n      \n          // Assuming you have some way to get the token from the response\n          const token = response.data.token;\n      \n          // Save the token in the store or wherever you are storing it\n          dispatch({ type: ActionTypes.SET_TOKEN, payload: token });\n      \n          // Redirect to \"/\"\n          // Assuming you are using some library or component for navigation\n          // Replace it with the actual method to navigate to \"/\"\n          // (e.g., this.props.history.push(\"/\") in a class component or useHistory() in a functional component)\n          navigate(\"/\");\n        } catch (error) {\n          // Handle error here, you might want to dispatch an error action\n          console.error(\"Error fetching products:\", error);\n        }\n      };\n\n\n// export const setProducts =(Products)=> {\n//     return {\n//         type:ActionTypes.SET_PRODUCTS,\n//         payload:Products\n//     };\n// };\n\n// export const selectedProducts =(Product)=> {\n//     return {\n//         type:ActionTypes.SELECTED_PRODUCT,\n//         payload:Product\n//     };\n// };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,0BAA0B;AACtD,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AACA;AACA;AACA;AACA;;AAKI,OAAO,MAAMC,aAAa,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACK,IAAI,CAAE,QAAO,EAAEH,IAAI,CAAC;IAClDC,QAAQ,CAAC;MAAEG,IAAI,EAAEP,WAAW,CAACQ,aAAa;MAAEC,OAAO,EAAEJ,QAAQ,CAACF;IAAK,CAAC,CAAC;;IAErE;IACA,MAAMO,KAAK,GAAGL,QAAQ,CAACF,IAAI,CAACO,KAAK;;IAEjC;IACAN,QAAQ,CAAC;MAAEG,IAAI,EAAEP,WAAW,CAACW,SAAS;MAAEF,OAAO,EAAEC;IAAM,CAAC,CAAC;;IAEzD;IACA;IACA;IACA;IACAE,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EAClD;AACF,CAAC;;AAGP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}